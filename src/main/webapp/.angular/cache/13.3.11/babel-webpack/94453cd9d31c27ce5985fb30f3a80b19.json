{"ast":null,"code":"import _asyncToGenerator from \"D:\\\\Projects\\\\\\u0443\\u0447\\u0451\\u0431\\u0430\\\\\\u0441\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440_8\\\\\\u043D\\u0438\\u0440\\\\TaskManager\\\\src\\\\main\\\\webapp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { AddProjectComponent } from \"./add-project/add-project.component\";\nimport { AddTaskComponent } from \"./add-task/add-task.component\";\nimport { moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nlet ContentComponent = class ContentComponent {\n  constructor(dialog, router, authService, httpService) {\n    this.dialog = dialog;\n    this.router = router;\n    this.authService = authService;\n    this.httpService = httpService;\n    this.projects = [];\n    this.tasks = [];\n    this.todoTasks = [];\n    this.inProgressTasks = [];\n    this.doneTasks = [];\n    this.isAuthenticated = false;\n    this.authService.user.subscribe(user => {\n      this.user = user;\n      console.log(this.user);\n\n      if (user && this.user !== undefined) {\n        this.isAuthenticated = true;\n        this.httpService.getProjects(user.id).subscribe(data => this.projects = data);\n      }\n    });\n  }\n\n  chooseProject(project) {\n    this.httpService.getTasks(project.id).subscribe(data => {\n      this.currentProject = project;\n      this.currentProject.tasks = data;\n      this.parseTasks();\n    });\n  }\n\n  parseTasks() {\n    this.todoTasks = [];\n    this.inProgressTasks = [];\n    this.doneTasks = [];\n\n    if (this.currentProject === undefined) {\n      return;\n    }\n\n    for (let task of this.currentProject.tasks) {\n      if (task.status === \"todo\") {\n        this.todoTasks.push(task);\n      } else if (task.status === \"inProgress\") {\n        this.inProgressTasks.push(task);\n      } else {\n        this.doneTasks.push(task);\n      }\n    }\n  }\n\n  createProject() {\n    const dialogRef = this.dialog.open(AddProjectComponent, {\n      data: null\n    });\n    dialogRef.afterClosed().subscribe(project => {\n      var _a;\n\n      if (project) {\n        project.userId = (_a = this.user) === null || _a === void 0 ? void 0 : _a.id;\n        this.httpService.saveProject(project).subscribe(() => {\n          if (this.user !== undefined) {\n            this.httpService.getProjects(this.user.id).subscribe(data => {\n              console.log(data);\n              this.projects = data;\n            });\n          }\n        });\n      }\n    });\n  }\n\n  createTask() {\n    var _this = this;\n\n    const dialogRef = this.dialog.open(AddTaskComponent, {\n      data: null\n    });\n    dialogRef.afterClosed().subscribe( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (task) {\n        var _a;\n\n        if (task) {\n          console.log(_this.currentProject);\n          task.projectId = (_a = _this.currentProject) === null || _a === void 0 ? void 0 : _a.id;\n\n          _this.parseTasks();\n\n          _this.httpService.saveTask(task).subscribe(() => {\n            _this.httpService.getTasks(task.projectId).subscribe(data => {\n              if (_this.currentProject !== undefined) {\n                _this.currentProject.tasks = data;\n\n                _this.parseTasks();\n              }\n            });\n          });\n        }\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  }\n\n  drop(event) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\n      let tasks = [];\n\n      for (let task of this.todoTasks) {\n        task.status = \"todo\";\n        tasks.push(task);\n      }\n\n      for (let task of this.inProgressTasks) {\n        task.status = \"inProgress\";\n        tasks.push(task);\n      }\n\n      for (let task of this.doneTasks) {\n        task.status = \"done\";\n        tasks.push(task);\n      }\n\n      console.log(tasks);\n      this.httpService.saveTasks(tasks).subscribe(() => {\n        if (this.currentProject !== undefined) {\n          this.httpService.getTasks(this.currentProject.id).subscribe(data => {\n            if (this.currentProject !== undefined) {\n              this.currentProject.tasks = data;\n              this.parseTasks();\n            }\n          });\n        }\n      });\n    }\n  }\n\n  goToRegistration() {\n    this.router.navigate(['/registration']);\n  }\n\n  goToLogin() {\n    this.router.navigate(['/login']);\n  }\n\n};\nContentComponent = __decorate([Component({\n  selector: 'app-content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.css']\n})], ContentComponent);\nexport { ContentComponent };","map":{"version":3,"sources":["D:/Projects/учёба/семестр_8/нир/TaskManager/src/main/webapp/src/app/components/content/content.component.ts"],"names":["__decorate","Component","AddProjectComponent","AddTaskComponent","moveItemInArray","transferArrayItem","ContentComponent","constructor","dialog","router","authService","httpService","projects","tasks","todoTasks","inProgressTasks","doneTasks","isAuthenticated","user","subscribe","console","log","undefined","getProjects","id","data","chooseProject","project","getTasks","currentProject","parseTasks","task","status","push","createProject","dialogRef","open","afterClosed","_a","userId","saveProject","createTask","projectId","saveTask","drop","event","previousContainer","container","previousIndex","currentIndex","saveTasks","goToRegistration","navigate","goToLogin","selector","templateUrl","styleUrls"],"mappings":";AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,mBAAT,QAAoC,qCAApC;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,SAASC,eAAT,EAA0BC,iBAA1B,QAAmD,wBAAnD;AACA,IAAIC,gBAAgB,GAAG,MAAMA,gBAAN,CAAuB;AAC1CC,EAAAA,WAAW,CAACC,MAAD,EAASC,MAAT,EAAiBC,WAAjB,EAA8BC,WAA9B,EAA2C;AAClD,SAAKH,MAAL,GAAcA,MAAd;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,SAAL,GAAiB,EAAjB;AACA,SAAKC,eAAL,GAAuB,EAAvB;AACA,SAAKC,SAAL,GAAiB,EAAjB;AACA,SAAKC,eAAL,GAAuB,KAAvB;AACA,SAAKP,WAAL,CAAiBQ,IAAjB,CAAsBC,SAAtB,CAAgCD,IAAI,IAAI;AACpC,WAAKA,IAAL,GAAYA,IAAZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,IAAjB;;AACA,UAAIA,IAAI,IAAI,KAAKA,IAAL,KAAcI,SAA1B,EAAqC;AACjC,aAAKL,eAAL,GAAuB,IAAvB;AACA,aAAKN,WAAL,CAAiBY,WAAjB,CAA6BL,IAAI,CAACM,EAAlC,EACKL,SADL,CACgBM,IAAD,IAAU,KAAKb,QAAL,GAAgBa,IADzC;AAEH;AACJ,KARD;AASH;;AACDC,EAAAA,aAAa,CAACC,OAAD,EAAU;AACnB,SAAKhB,WAAL,CAAiBiB,QAAjB,CAA0BD,OAAO,CAACH,EAAlC,EACKL,SADL,CACgBM,IAAD,IAAU;AACrB,WAAKI,cAAL,GAAsBF,OAAtB;AACA,WAAKE,cAAL,CAAoBhB,KAApB,GAA4BY,IAA5B;AACA,WAAKK,UAAL;AACH,KALD;AAMH;;AACDA,EAAAA,UAAU,GAAG;AACT,SAAKhB,SAAL,GAAiB,EAAjB;AACA,SAAKC,eAAL,GAAuB,EAAvB;AACA,SAAKC,SAAL,GAAiB,EAAjB;;AACA,QAAI,KAAKa,cAAL,KAAwBP,SAA5B,EAAuC;AACnC;AACH;;AACD,SAAK,IAAIS,IAAT,IAAiB,KAAKF,cAAL,CAAoBhB,KAArC,EAA4C;AACxC,UAAIkB,IAAI,CAACC,MAAL,KAAgB,MAApB,EAA4B;AACxB,aAAKlB,SAAL,CAAemB,IAAf,CAAoBF,IAApB;AACH,OAFD,MAGK,IAAIA,IAAI,CAACC,MAAL,KAAgB,YAApB,EAAkC;AACnC,aAAKjB,eAAL,CAAqBkB,IAArB,CAA0BF,IAA1B;AACH,OAFI,MAGA;AACD,aAAKf,SAAL,CAAeiB,IAAf,CAAoBF,IAApB;AACH;AACJ;AACJ;;AACDG,EAAAA,aAAa,GAAG;AACZ,UAAMC,SAAS,GAAG,KAAK3B,MAAL,CAAY4B,IAAZ,CAAiBlC,mBAAjB,EAAsC;AACpDuB,MAAAA,IAAI,EAAE;AAD8C,KAAtC,CAAlB;AAGAU,IAAAA,SAAS,CAACE,WAAV,GAAwBlB,SAAxB,CAAkCQ,OAAO,IAAI;AACzC,UAAIW,EAAJ;;AACA,UAAIX,OAAJ,EAAa;AACTA,QAAAA,OAAO,CAACY,MAAR,GAAiB,CAACD,EAAE,GAAG,KAAKpB,IAAX,MAAqB,IAArB,IAA6BoB,EAAE,KAAK,KAAK,CAAzC,GAA6C,KAAK,CAAlD,GAAsDA,EAAE,CAACd,EAA1E;AACA,aAAKb,WAAL,CAAiB6B,WAAjB,CAA6Bb,OAA7B,EACKR,SADL,CACe,MAAM;AACjB,cAAI,KAAKD,IAAL,KAAcI,SAAlB,EAA6B;AACzB,iBAAKX,WAAL,CAAiBY,WAAjB,CAA6B,KAAKL,IAAL,CAAUM,EAAvC,EACKL,SADL,CACgBM,IAAD,IAAU;AACrBL,cAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACA,mBAAKb,QAAL,GAAgBa,IAAhB;AACH,aAJD;AAKH;AACJ,SATD;AAUH;AACJ,KAfD;AAgBH;;AACDgB,EAAAA,UAAU,GAAG;AAAA;;AACT,UAAMN,SAAS,GAAG,KAAK3B,MAAL,CAAY4B,IAAZ,CAAiBjC,gBAAjB,EAAmC;AACjDsB,MAAAA,IAAI,EAAE;AAD2C,KAAnC,CAAlB;AAGAU,IAAAA,SAAS,CAACE,WAAV,GAAwBlB,SAAxB;AAAA,mCAAkC,WAAOY,IAAP,EAAgB;AAC9C,YAAIO,EAAJ;;AACA,YAAIP,IAAJ,EAAU;AACNX,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAI,CAACQ,cAAjB;AACAE,UAAAA,IAAI,CAACW,SAAL,GAAiB,CAACJ,EAAE,GAAG,KAAI,CAACT,cAAX,MAA+B,IAA/B,IAAuCS,EAAE,KAAK,KAAK,CAAnD,GAAuD,KAAK,CAA5D,GAAgEA,EAAE,CAACd,EAApF;;AACA,UAAA,KAAI,CAACM,UAAL;;AACA,UAAA,KAAI,CAACnB,WAAL,CAAiBgC,QAAjB,CAA0BZ,IAA1B,EACKZ,SADL,CACe,MAAM;AACjB,YAAA,KAAI,CAACR,WAAL,CAAiBiB,QAAjB,CAA0BG,IAAI,CAACW,SAA/B,EACKvB,SADL,CACgBM,IAAD,IAAU;AACrB,kBAAI,KAAI,CAACI,cAAL,KAAwBP,SAA5B,EAAuC;AACnC,gBAAA,KAAI,CAACO,cAAL,CAAoBhB,KAApB,GAA4BY,IAA5B;;AACA,gBAAA,KAAI,CAACK,UAAL;AACH;AACJ,aAND;AAOH,WATD;AAUH;AACJ,OAjBD;;AAAA;AAAA;AAAA;AAAA;AAkBH;;AACDc,EAAAA,IAAI,CAACC,KAAD,EAAQ;AACR,QAAIA,KAAK,CAACC,iBAAN,KAA4BD,KAAK,CAACE,SAAtC,EAAiD;AAC7C3C,MAAAA,eAAe,CAACyC,KAAK,CAACE,SAAN,CAAgBtB,IAAjB,EAAuBoB,KAAK,CAACG,aAA7B,EAA4CH,KAAK,CAACI,YAAlD,CAAf;AACH,KAFD,MAGK;AACD5C,MAAAA,iBAAiB,CAACwC,KAAK,CAACC,iBAAN,CAAwBrB,IAAzB,EAA+BoB,KAAK,CAACE,SAAN,CAAgBtB,IAA/C,EAAqDoB,KAAK,CAACG,aAA3D,EAA0EH,KAAK,CAACI,YAAhF,CAAjB;AACA,UAAIpC,KAAK,GAAG,EAAZ;;AACA,WAAK,IAAIkB,IAAT,IAAiB,KAAKjB,SAAtB,EAAiC;AAC7BiB,QAAAA,IAAI,CAACC,MAAL,GAAc,MAAd;AACAnB,QAAAA,KAAK,CAACoB,IAAN,CAAWF,IAAX;AACH;;AACD,WAAK,IAAIA,IAAT,IAAiB,KAAKhB,eAAtB,EAAuC;AACnCgB,QAAAA,IAAI,CAACC,MAAL,GAAc,YAAd;AACAnB,QAAAA,KAAK,CAACoB,IAAN,CAAWF,IAAX;AACH;;AACD,WAAK,IAAIA,IAAT,IAAiB,KAAKf,SAAtB,EAAiC;AAC7Be,QAAAA,IAAI,CAACC,MAAL,GAAc,MAAd;AACAnB,QAAAA,KAAK,CAACoB,IAAN,CAAWF,IAAX;AACH;;AACDX,MAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACA,WAAKF,WAAL,CAAiBuC,SAAjB,CAA2BrC,KAA3B,EACKM,SADL,CACe,MAAM;AACjB,YAAI,KAAKU,cAAL,KAAwBP,SAA5B,EAAuC;AACnC,eAAKX,WAAL,CAAiBiB,QAAjB,CAA0B,KAAKC,cAAL,CAAoBL,EAA9C,EACKL,SADL,CACgBM,IAAD,IAAU;AACrB,gBAAI,KAAKI,cAAL,KAAwBP,SAA5B,EAAuC;AACnC,mBAAKO,cAAL,CAAoBhB,KAApB,GAA4BY,IAA5B;AACA,mBAAKK,UAAL;AACH;AACJ,WAND;AAOH;AACJ,OAXD;AAYH;AACJ;;AACDqB,EAAAA,gBAAgB,GAAG;AACf,SAAK1C,MAAL,CAAY2C,QAAZ,CAAqB,CAAC,eAAD,CAArB;AACH;;AACDC,EAAAA,SAAS,GAAG;AACR,SAAK5C,MAAL,CAAY2C,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACH;;AApIyC,CAA9C;AAsIA9C,gBAAgB,GAAGN,UAAU,CAAC,CAC1BC,SAAS,CAAC;AACNqD,EAAAA,QAAQ,EAAE,aADJ;AAENC,EAAAA,WAAW,EAAE,0BAFP;AAGNC,EAAAA,SAAS,EAAE,CAAC,yBAAD;AAHL,CAAD,CADiB,CAAD,EAM1BlD,gBAN0B,CAA7B;AAOA,SAASA,gBAAT","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Component } from '@angular/core';\r\nimport { AddProjectComponent } from \"./add-project/add-project.component\";\r\nimport { AddTaskComponent } from \"./add-task/add-task.component\";\r\nimport { moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\r\nlet ContentComponent = class ContentComponent {\r\n    constructor(dialog, router, authService, httpService) {\r\n        this.dialog = dialog;\r\n        this.router = router;\r\n        this.authService = authService;\r\n        this.httpService = httpService;\r\n        this.projects = [];\r\n        this.tasks = [];\r\n        this.todoTasks = [];\r\n        this.inProgressTasks = [];\r\n        this.doneTasks = [];\r\n        this.isAuthenticated = false;\r\n        this.authService.user.subscribe(user => {\r\n            this.user = user;\r\n            console.log(this.user);\r\n            if (user && this.user !== undefined) {\r\n                this.isAuthenticated = true;\r\n                this.httpService.getProjects(user.id)\r\n                    .subscribe((data) => this.projects = data);\r\n            }\r\n        });\r\n    }\r\n    chooseProject(project) {\r\n        this.httpService.getTasks(project.id)\r\n            .subscribe((data) => {\r\n            this.currentProject = project;\r\n            this.currentProject.tasks = data;\r\n            this.parseTasks();\r\n        });\r\n    }\r\n    parseTasks() {\r\n        this.todoTasks = [];\r\n        this.inProgressTasks = [];\r\n        this.doneTasks = [];\r\n        if (this.currentProject === undefined) {\r\n            return;\r\n        }\r\n        for (let task of this.currentProject.tasks) {\r\n            if (task.status === \"todo\") {\r\n                this.todoTasks.push(task);\r\n            }\r\n            else if (task.status === \"inProgress\") {\r\n                this.inProgressTasks.push(task);\r\n            }\r\n            else {\r\n                this.doneTasks.push(task);\r\n            }\r\n        }\r\n    }\r\n    createProject() {\r\n        const dialogRef = this.dialog.open(AddProjectComponent, {\r\n            data: null,\r\n        });\r\n        dialogRef.afterClosed().subscribe(project => {\r\n            var _a;\r\n            if (project) {\r\n                project.userId = (_a = this.user) === null || _a === void 0 ? void 0 : _a.id;\r\n                this.httpService.saveProject(project)\r\n                    .subscribe(() => {\r\n                    if (this.user !== undefined) {\r\n                        this.httpService.getProjects(this.user.id)\r\n                            .subscribe((data) => {\r\n                            console.log(data);\r\n                            this.projects = data;\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n    createTask() {\r\n        const dialogRef = this.dialog.open(AddTaskComponent, {\r\n            data: null,\r\n        });\r\n        dialogRef.afterClosed().subscribe(async (task) => {\r\n            var _a;\r\n            if (task) {\r\n                console.log(this.currentProject);\r\n                task.projectId = (_a = this.currentProject) === null || _a === void 0 ? void 0 : _a.id;\r\n                this.parseTasks();\r\n                this.httpService.saveTask(task)\r\n                    .subscribe(() => {\r\n                    this.httpService.getTasks(task.projectId)\r\n                        .subscribe((data) => {\r\n                        if (this.currentProject !== undefined) {\r\n                            this.currentProject.tasks = data;\r\n                            this.parseTasks();\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    }\r\n    drop(event) {\r\n        if (event.previousContainer === event.container) {\r\n            moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\r\n        }\r\n        else {\r\n            transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\r\n            let tasks = [];\r\n            for (let task of this.todoTasks) {\r\n                task.status = \"todo\";\r\n                tasks.push(task);\r\n            }\r\n            for (let task of this.inProgressTasks) {\r\n                task.status = \"inProgress\";\r\n                tasks.push(task);\r\n            }\r\n            for (let task of this.doneTasks) {\r\n                task.status = \"done\";\r\n                tasks.push(task);\r\n            }\r\n            console.log(tasks);\r\n            this.httpService.saveTasks(tasks)\r\n                .subscribe(() => {\r\n                if (this.currentProject !== undefined) {\r\n                    this.httpService.getTasks(this.currentProject.id)\r\n                        .subscribe((data) => {\r\n                        if (this.currentProject !== undefined) {\r\n                            this.currentProject.tasks = data;\r\n                            this.parseTasks();\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n    goToRegistration() {\r\n        this.router.navigate(['/registration']);\r\n    }\r\n    goToLogin() {\r\n        this.router.navigate(['/login']);\r\n    }\r\n};\r\nContentComponent = __decorate([\r\n    Component({\r\n        selector: 'app-content',\r\n        templateUrl: './content.component.html',\r\n        styleUrls: ['./content.component.css']\r\n    })\r\n], ContentComponent);\r\nexport { ContentComponent };\r\n"]},"metadata":{},"sourceType":"module"}